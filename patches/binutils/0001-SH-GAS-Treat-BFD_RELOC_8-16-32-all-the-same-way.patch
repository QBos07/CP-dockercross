From cf69b47327acefbc9973843bc029ccd7ffe0c203 Mon Sep 17 00:00:00 2001
From: QBos07 <qubos@outlook.de>
Date: Sat, 24 May 2025 13:53:10 +0000
Subject: [PATCH] SH: GAS: Treat BFD_RELOC_8/16/32 all the same way

While they should only diffrentiate between there sizes, 16 and 32 where
treated pretty diffrently from 8 wich resulted in the zeroing of .word
or .long jumptables when relaxing. Using .byte in these cases created it
correctly. This unifies 16 and 32 to follow the 8 way and fixes such
jumptabels.
---
 gas/config/tc-sh.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/gas/config/tc-sh.c b/gas/config/tc-sh.c
index db11939a350..be791b11eac 100644
--- a/gas/config/tc-sh.c
+++ b/gas/config/tc-sh.c
@@ -3533,7 +3533,6 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)
       *buf = val >> 2;
       break;
 
-    case BFD_RELOC_8:
     case BFD_RELOC_SH_IMM8:
       /* Sometimes the 8 bit value is sign extended (e.g., add) and
          sometimes it is not (e.g., and).  We permit any 8 bit value.
@@ -3541,7 +3540,7 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)
          reasonable looking assembly code, such as ``and -0x1,r0''.  */
       max = 0xff;
       min = -0xff;
-      *buf++ = val;
+      *buf = val;
       break;
 
     case BFD_RELOC_SH_PCRELIMM8BY4:
@@ -3603,13 +3602,16 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)
       buf[highbyte] |= (val >> 8) & 0xf;
       break;
 
-    case BFD_RELOC_32:
     case BFD_RELOC_32_PCREL:
       apply_full_field_fix (fixP, buf, val, 4);
       break;
 
+    case BFD_RELOC_8:
     case BFD_RELOC_16:
-      apply_full_field_fix (fixP, buf, val, 2);
+    case BFD_RELOC_32:
+      max = (1 << (fixP->fx_size * 8)) - 1;
+      min = -max;
+      md_number_to_chars(buf, val, fixP->fx_size);
       break;
 
     case BFD_RELOC_SH_USES:
-- 
2.49.0

